#!/bin/bash -xeu

# ---------------------------------------------------------
# Get operating system
# ---------------------------------------------------------
{{- $platform := "" -}}
{{ if eq .chezmoi.os "linux" -}}
    {{ if eq .chezmoi.osRelease.id "ubuntu" -}}
        {{- $platform = "ubuntu" -}}
    {{ else if eq .chezmoi.osRelease.id "arch" -}}
        {{- $platform = "arch" -}}
    {{ else if eq .chezmoi.osRelease.id "manjaro" -}}
        {{- $platform = "manjaro" -}}
    {{ end -}}
{{ else if eq .chezmoi.os "darwin" -}}
    {{- $platform = "darwin" -}}
{{- end -}}

{{if eq $platform "" -}}
    # if platform is empty, raise error.
    echo "Operating System is UNKNOWN!"
    return 1
{{- end}}

echo "Operating System is {{$platform}}"

{{if eq $platform "arch" -}}
# ---------------------------------------------------------
# Set Mirror Server for ArchLinux
# ---------------------------------------------------------
    echo "Setting arch mirror servers"
    mkdir -p ~/.cache
    sudo pacman -Sy -q --noconfirm reflector
    sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
    sudo reflector --country "Japan" --latest 5 --completion-percent 95 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
{{end -}}

{{if eq $platform "manjaro" -}}
# ---------------------------------------------------------
# Set Mirror Server for Manjaro
# ---------------------------------------------------------
    mkdir -p ~/.cache
    sudo pacman-mirrors -c Japan
    sudo pacman-mirrors --fasttrack
{{end -}}

{{if or (eq $platform "arch") (eq $platform "manjaro") -}}
# ---------------------------------------------------------
# Setup Pacman
# ---------------------------------------------------------
    # Edit /etc/pacman.conf
    if grep -q "#Color" /etc/pacman.conf;
    then
        sudo sed -i "s/#Color/Color/" /etc/pacman.conf
    fi

    if ! grep -q "ILoveCandy" /etc/pacman.conf;
    then
        sudo sed -i "/VerbosePkgLists/a ILoveCandy" /etc/pacman.conf
    fi

    # Update
    sudo pacman -Syyu -q --noconfirm

    # Change dir names to English
    sudo pacman -Sy -q xdg-user-dirs-gtk --noconfirm
    LANG=C xdg-user-dirs-gtk-update --noconfirm

    # Install applications
    sudo pacman -Sy -q --noconfirm \
        base-devel \
        bat \
        chezmoi \
        cmake \
        curl \
        fd \
        fzf \
        gcc \
        git \
        gtk2 \
        jq \
        lazygit \
        luarocks \
        neovim \
        noto-fonts-emoji \
        npm \
        openssl \
        ripgrep \
        openssh \
        ufw \
        unzip \
        wezterm \
        zsh
{{end -}}

{{ if eq $platform "ubuntu" -}}
{{ .chezmoi.sourceDir  }}/scripts/install-ubuntu.sh
{{end -}}

{{if or (eq $platform "arch") (eq $platform "manjaro") -}}
{{end -}}

{{ if eq $platform "darwin" -}}
{{ .chezmoi.sourceDir  }}/scripts/install-darwin.sh
{{end -}}

# ---------------------------------------------------------
# Install rye, cargo, volta
# ---------------------------------------------------------

# Install rye
## curl -sSf https://rye.astral.sh/get | RYE_INSTALL_OPTION="--yes" bash
{{ .chezmoi.sourceDir  }}/scripts/install-rye.sh

# Install Rust
if ! (type "cargo" > /dev/null 2>&1); then
    curl --proto '=https' --tlsv1.2 https://sh.rustup.rs > rustup.sh
    sh rustup.sh -y -q --no-modify-path && rm rustup.sh
    source "$HOME/.cargo/env"
fi

# Install Rust Apps
cargo install -q cargo-binstall
cargo binstall -q  -y --only-signed\
    bp \
    cargo-edit \
    cargo-update \
    eza \
    git-delta \
    sheldon \
    starship \
    topgrade \
    xcp \
    zoxide

{{ if eq .chezmoi.os "linux" -}}
# Install trashy (Linux only)
    cargo binstall -q -y --only-signed trashy
{{end -}}

# Install volta
if ! (type "volta" > /dev/null 2>&1); then
    curl https://get.volta.sh | bash
fi

# Install AstroNvim
nvim --headless +qa

# ---------------------------------------------------------
# Install UDEVGothic
# ---------------------------------------------------------
{{if or (eq $platform "arch") (eq $platform "manjaro") -}}
# GitHub リポジトリのユーザー名、リポジトリ名、およびリリースタグを指定
    USER_NAME="yuru7"
    REPO_NAME="udev-gothic"
    ZIP_FILE="font.zip"

# リリース情報を取得
    RELEASE_INFO=$(curl -s https://api.github.com/repos/$USER_NAME/$REPO_NAME/releases/latest)

# 最新のリリースアセットのURL
    ASSET_URL=$(echo $RELEASE_INFO | jq -r '.assets[0].browser_download_url')

# curl を使用してリリースアセットをダウンロード
    curl -LJ $ASSET_URL -o $ZIP_FILE

# Extract to /usr/share/fonts/
    sudo unzip -o $ZIP_FILE -d /usr/share/fonts/
# Delete zip file
    rm $ZIP_FILE
{{end -}}

# Rebuild bat cache for activate catppuccine
bat cache --build

# Create XDG folder
mkdir -p ~/.local/state

# Delete ~/bin/chezmoi
if [ -f "$HOME/bin/chezmoi" ]; then
    echo "Removing ~/bin/chezmoi"
    rm "$HOME/bin/chezmoi"
fi
if [ -d "$HOME/bin" ]; then
    if [ -z "$(ls -A $HOME/bin)" ]; then
        echo "Removing ~/bin"
        rmdir "$HOME/bin"
    fi
fi
